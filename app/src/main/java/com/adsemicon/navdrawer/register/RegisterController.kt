package com.adsemicon.navdrawer.register

import java.util.*

class RegisterController {

    // 106 registers
    //private val registerAddrs = ubyteArrayOf( // <- This declaration is experimental and its usage should be marked with '@kotlin.ExperimentalUnsignedTypes' or '@OptIn(kotlin.ExperimentalUnsignedTypes::class)'
    val regAddrs: Array<UByte> = arrayOf(
        0x01u, 0x05u, 0x06u, 0x08u, 0x09u, 0x0Au, 0x0Bu, 0x0Cu, 0x0Du, 0x0Eu,
        0x0Fu, 0x10u, 0x11u, 0x12u, 0x13u, 0x14u, 0x15u, 0x16u, 0x17u, 0x18u,
        0x19u, 0x1Au, 0x1Bu, 0x21u, 0x34u, 0x35u, 0x36u, 0x37u, 0x38u, 0x39u,
        0x3Au, 0x3Bu, 0x3Cu, 0x3Du, 0x3Eu, 0x3Fu, 0x40u, 0x41u, 0x42u, 0x43u,
        0x44u, 0x45u, 0x46u, 0x47u, 0x48u, 0x49u, 0x4Au, 0x4Fu, 0x59u, 0x5Au,
        0x5Bu, 0x5Cu, 0x5Du, 0x5Eu, 0x5Fu, 0x60u, 0x61u, 0x62u, 0x63u, 0x64u,
        0x65u, 0x66u, 0x67u, 0x68u, 0x69u, 0x6Au, 0x6Bu, 0x6Cu, 0x6Du, 0x6Eu,
        0x6Fu, 0x70u, 0x71u, 0x72u, 0x73u, 0x74u, 0x75u, 0x76u, 0x77u, 0x78u,
        0x79u, 0x7Au, 0x7Bu, 0x7Cu, 0x7Du, 0x7Eu, 0x7Fu, 0x80u, 0x81u, 0x82u,
        0x83u, 0x84u, 0x85u, 0x86u, 0x87u, 0x88u, 0x89u, 0x8Au, 0x8Bu, 0x8Cu,
        0x8Du, 0x8Eu, 0x8Fu, 0x90u, 0xA9u, 0xAAu)

    val registers = ArrayList<SingleRegister>()

    constructor() {
        for (ra in regAddrs) {
            registers.add(SingleRegister(ra))
        }
    }

    fun setRegister(addr:UByte, value:UByte) {
        val register = registers.single { it.addr == addr }
        register.value = value
    }

    fun getRegister(addr:UByte):SingleRegister{
        return registers.single { it.addr == addr }
    }

    fun getValue(addr:UByte):UByte{
        val register = registers.single { it.addr == addr }
        return register.value
    }

    fun hasRegister(addr:UByte):Boolean{
        return regAddrs.contains(addr)
    }
}
